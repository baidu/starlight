name: Starlight Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Default version to use when preparing a release."
        required: true
        default: "X.Y.Z"
      developmentVersion:
        description: "Default version to use for new local working copy."
        required: true
        default: "X.Y.Z-SNAPSHOT"


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Setup Java JDK and Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SECRET }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Publish package
        run: mvn -B release:prepare release:perform -P deploy -Darguments="-Dmaven.test.skip" -DreleaseVersion=${{ github.event.inputs.releaseVersion }} -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} --file starlight/pom.xml --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_USERNAME: ${{ secrets.OSSRH_USER }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSWD }}

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v3
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.releaseVersion }}
          release_name: ${{ github.event.inputs.releaseVersion }}
          body: |
            ### Things that changed in this release
            ${{ steps.changelog.outputs.changelog }}
          draft: true
          prerelease: false
